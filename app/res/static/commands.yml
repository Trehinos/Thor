user/edit:
    class: Thor\Framework\Commands\UserCommand
    command: editUser
    description: 'create a new user in DB'
    arguments:
        pid:
            hasValue: true
            description: 'user''s PID. Needed to identify the user in DB'
        username:
            hasValue: true
            description: 'user''s new login'
        password:
            hasValue: true
            description: 'user''s new clear password. Will be hashed before insertion'
user/delete:
    class: Thor\Framework\Commands\UserCommand
    command: deleteUser
    description: 'delete an existing user in DB'
    arguments:
        pid:
            hasValue: true
            description: 'user''s PID. Needed to identify the user in DB'
route/set:
    class: Thor\Framework\Commands\CoreCommand
    command: routeSet
    description: 'add or edit a route in app/res/static/routes.yml'
    arguments:
        name:
            hasValue: true
            description: 'route identifier'
        path:
            hasValue: true
            description: 'route PATH'
        method:
            hasValue: true
            description: 'the request method GET, POST, ...'
        action-class:
            hasValue: true
            description: 'the controller class'
        action-method:
            hasValue: true
            description: 'the controller method'
route/list:
    class: Thor\Framework\Commands\CoreCommand
    command: routeList
    description: 'list all routes in app/res/static/routes.yml'
clear/cache:
    class: Thor\Framework\Commands\CoreCommand
    command: clearCache
    description: 'clear the cache'
clear/logs:
    class: Thor\Framework\Commands\CoreCommand
    command: clearLogs
    description: 'clear all logs'
    arguments:
        env:
            hasValue: true
            description: 'prod|verbose|debug|[dev] : the environment to clear'
core/setup:
    class: Thor\Framework\Commands\CoreCommand
    command: setup
    description: 'create the PdoRows tables'
    arguments:
        database:
            hasValue: true
            description: '(default = default)'
core/install:
    class: Thor\Framework\Commands\CoreCommand
    command: install
    description: 'run thor/setup then migrations'
core/update:
    class: Thor\Framework\Commands\CoreCommand
    command: update
    description: 'run the update process'
core/uninstall:
    class: Thor\Framework\Commands\CoreCommand
    command: uninstall
    description: 'removes all PdoRows in DB'
database/migrate:
    class: Thor\Framework\Commands\DatabaseCommand
    command: migrate
    description: 'run a migration file with multiple SQL queries'
    arguments:
        index:
            hasValue: true
            description: 'the new migration index'
core/set-env:
    class: Thor\Framework\Commands\CoreCommand
    command: setEnv
    description: 'set the environment'
    arguments:
        env:
            hasValue: true
            description: 'PROD | DEBUG | DEV'
core/repl:
    class: Thor\Cli\Repl
    command: repl
    description: "launch a REPL"

project/document:
    class: Thor\Framework\Commands\Project
    command: document
    description: "generates documentation of a project"
    arguments:
        namespace:
            hasValue: true
            description: (default 'Thor')
        folder:
            hasValue: true
            description: (default 'thor')
        target:
            hasValue: true
            description: "(default 'github') values : github|gitlab"
        verbose:
            hasValue: false
            description: echoes the generated markdown
