route/set:
    class: Thor\Framework\Commands\CoreCommand
    command: routeSet
    description: 'add or edit a route in app/res/static/routes.yml'
    arguments:
        name:
            hasValue: true
            description: 'route identifier'
        path:
            hasValue: true
            description: 'route PATH'
        method:
            hasValue: true
            description: 'the request method GET, POST, ...'
        action-class:
            hasValue: true
            description: 'the controller class'
        action-method:
            hasValue: true
            description: 'the controller method'
route/list:
    class: Thor\Framework\Commands\CoreCommand
    command: routeList
    description: 'list all routes in app/res/static/routes.yml'
core/install:
    class: Thor\Framework\Commands\CoreCommand
    command: install
    description: 'run thor/setup then migrations'
core/update:
    class: Thor\Framework\Commands\CoreCommand
    command: update
    description: 'run the update process'
core/uninstall:
    class: Thor\Framework\Commands\CoreCommand
    command: uninstall
    description: 'removes all PdoRows in DB'

project/document:
    class: Thor\Framework\Commands\Project
    command: document
    description: "generates documentation of a project"
    arguments:
        namespace:
            hasValue: true
            description: (default 'Thor')
        folder:
            hasValue: true
            description: (default 'thor')
        target:
            hasValue: true
            description: "(default 'github') values : github|gitlab"
        verbose:
            hasValue: false
            description: echoes the generated markdown
